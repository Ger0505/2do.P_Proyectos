#include <stdio.h>
#include <stdlib.h>
#define Arbol struct arbol

Arbol{
	int ID,s,R;
	char n[15],a1[15],a2[15];
	float calf;
	Arbol*der;
	Arbol*izq;
};

void insertarArbol(Arbol*nuevo);
void preorden(Arbol*r,FILE*fila);
Arbol*raiz=NULL;

int main(){
	int num=0;
	int I,S;
	char N[15],A1[15],A2[15];
	float ca;
	FILE*regist=fopen("Registros.txt","rb");
	if(regist==NULL){
		perror("Error en el archivo");
		return 0;
	}
	while(!feof(regist)){
		num++;
		Arbol*nuevo=(Arbol*)malloc(sizeof(Arbol));
		nuevo->R=num;
		fscanf(regist,"%i",&nuevo->ID);
		fflush(stdin);
		fscanf(regist,"%s",&nuevo->n);
		fscanf(regist,"%s",&nuevo->a1);
		fscanf(regist,"%s",&nuevo->a2);
		fscanf(regist,"%i",&nuevo->s);
		fscanf(regist,"%f",&nuevo->calf);
		printf("%i %s %s %s %i %.1f\n",nuevo->ID,nuevo->n,nuevo->a1,nuevo->a2,nuevo->s,nuevo->calf);
		nuevo->der=NULL;
		nuevo->izq=NULL;
		insertarArbol(nuevo);
	}
	fclose(regist);
	FILE*arbol=fopen("Tabla.txt","wb");
	preorden(raiz,arbol);
	fclose(arbol);
}

void insertarArbol(Arbol*nuevo){
	Arbol*aux=raiz,*ant=NULL;
	while(aux!=NULL){
		ant=aux;
		if(nuevo->ID>aux->ID){
			aux=aux->der;
		}else{
			aux=aux->izq;
		}
	}
	if(ant==NULL){
		raiz=nuevo;
	}else if(nuevo->ID>ant->ID){
		ant->der=nuevo;
	}else{
		ant->izq=nuevo;
	}
}

void preorden(Arbol*r,FILE*fila){
	int i,d;
	if(r!=NULL){
		if(r->izq==NULL && r->der==NULL){
			fprintf(fila,"%i %i %i %i\n",-1,r->ID,r->R,-1);
		   printf("-2 %s\n",r->n);
		}else if(r->izq==NULL){
		   fprintf(fila,"%i %i %i %i\n",-1,r->ID,r->R,r->der->R);
		   printf("1 %s\n",r->n);	
		}else if(r->der==NULL){
			fprintf(fila,"%i %i %i %i\n",r->izq->R,r->ID,r->R,-1);
			printf("-1 %s\n",r->n);	
		}else{
			fprintf(fila,"%i %i %i %i\n",r->izq->R,r->ID,r->R,r->der->R);
			printf("2 %s\n",r->n);	
		}
		preorden(r->izq,fila);
		preorden(r->der,fila);
	}
}
